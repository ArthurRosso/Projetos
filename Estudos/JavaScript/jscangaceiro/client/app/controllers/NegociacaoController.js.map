{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","_criaNegociacao","paraData","value","parseInt","parseFloat","event","preventDefault","_limparFormulario","message","apaga","apagaTodos","esvazia","importaNegociacoes","obterNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals","focus"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind } from '../util/index.js';\n\nexport class NegociacaoController {\n\n    constructor() {\n\n        const $ = document.querySelector.bind(document);\n        \n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    _init() {\n        getNegociacaoDao()\n        .then(dao => dao.listaTodos())\n        .then(negociacoes => \n            negociacoes.forEach(negociacao => \n                this._negociacoes.adiciona(negociacao)))\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    adiciona(event) {\n        try{\n            event.preventDefault();\n            const negociacao = this._criaNegociacao();\n\n            getNegociacaoDao()\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => {\n                this._negociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociação adicionada com sucesso';\n                this._limparFormulario();\n            })\n            .catch(err => this._mensagem.texto = err);\n\n        } catch(err) {\n            if(err instanceof DataInvalidaException) {\n                this._mensagem.texto = err.message;\n            } else {\n                this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte.';\n            }\n            \n        }\n    }\n\n    apaga() {\n\n        getNegociacaoDao()\n        .then(dao => dao.apagaTodos())\n        .then(() => {\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        })\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    importaNegociacoes() {\n      \n        this._service\n            .obterNegociacoesDoPeriodo()\n            .then(\n                negociacoes => {\n                    negociacoes\n                        .filter(novaNegociacao =>\n                            !this._negociacoes\n                                .paraArray()\n                                .some(negociacaoExistente => \n                                    novaNegociacao.equals(negociacaoExistente)\n                                )\n                        )\n                        .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n                    this._mensagem.texto = 'Negociações do período importadas com sucesso!';\n                }\n            )\n            .catch( err => this._mensagem.texto = err );\n    }\n\n    _limparFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n}"]}