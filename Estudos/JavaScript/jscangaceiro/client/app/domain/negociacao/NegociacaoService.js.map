{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAChB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADgB,EACOF,OAAOG,UADd,EAC0BH,OAAOI,KADjC,CAApB,CAJL,EAQCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDe,mDAAmC;;AAE/B,2BAAO,KAAKZ,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAChB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADgB,EACOF,OAAOG,UADd,EAC0BH,OAAOI,KADjC,CAApB,CAJL,EAQCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDgB,oDAAoC;;AAEhC,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAChB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADgB,EACOF,OAAOG,UADd,EAC0BH,OAAOI,KADjC,CAApB,CAJL,EAQCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,4DAAzB,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEKiB,yCAAN,GAAkC;AAAA;;AAAA;AAC9B,4BAAI;AACA,gCAAIC,UAAUC,QAAQC,GAAR,CAAY,CACtB,MAAKhB,wBAAL,EADsB,EAEtB,MAAKW,gCAAL,EAFsB,EAGtB,MAAKC,iCAAL,EAHsB,CAAZ,CAAd;;AAMA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAGH,yBAVD,CAUE,OAAMd,GAAN,EAAW;AACTe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAId,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAd6B;AAejC;AArE0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(\n                dados =>  \n                    dados.map(objeto => new Negociacao(\n                        new Date(objeto.data), objeto.quantidade, objeto.valor\n                    )\n                ), \n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações!');\n                }\n            );\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(\n                dados => \n                    dados.map(objeto => new Negociacao(\n                        new Date(objeto.data), objeto.quantidade, objeto.valor\n                    )\n                ), \n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior!');\n                }\n            );\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(\n                dados => \n                    dados.map(objeto => new Negociacao(\n                        new Date(objeto.data), objeto.quantidade, objeto.valor\n                    )\n                ),\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana retrasada!');\n                }\n            );\n    }\n\n    async obterNegociacoesDoPeriodo() {\n        try {\n            let periodo = Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ]);\n\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n        } catch(err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período');\n        }\n    }\n}"]}